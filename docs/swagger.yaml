swagger: '2.0'
info:
  version: V5
  title: Topcoder Member API
  description: >
    Services that provide access and interaction with all sorts of member data.


    ## Pagination


    - Requests that return multiple items will be paginated to 20 items by
    default.


    - You can specify further pages with the `page` parameter (1 based).


    - You can also set a custom page size up to 100 with the `perPage`
    parameter.


    - Pagination response data is included in http headers.


    - By default, the response header contains links with `next`, `last`,
    `first`, `prev` resource links.

    ## Roles

    Each API endpoint has described minimal role to access. Only users with
    specific roles can access those endpoints (where required). For insufficient
    role 403 Forbidden HTTP response will be returned.


    User roles:

      + `administrator` - administrator
      + `admin` - administrator
      + `connect manager` - connect manager
      + `connect admin` - connect administrator
      + `copilot` - copilot
      + `client manager` - client manager
      + `connect account manager` - connect account manager
      + `connect copilot manager` - connect copilot manager

    ## Personally Identifiable Information

    All endpoints that return member information must filter the response data
    to exclude the personally identifiable information (properties from a
    configurable array) unless the caller is a machine (M2M token), has
    administrative privileges or is the member himself.

    ## Status codes:

    The HTTP status codes to communicate with the API consumer.

    + `200 OK` - Response to a successful GET, PUT, PATCH or DELETE.

    + `201 Created` - When a resource is successfully created with POST.

    + `400 Bad Request` - Malformed request; request body validation errors.

    + `401 Unauthorized` - When no or invalid authentication details are
    provided.

    + `403 Forbidden` - User authenticated, but doesn't have access to the
    resource.

    + `404 Not Found` - When a non-existent resource is requested.

    + `500 Server Error` - Something went wrong on the API end.
  license:
    name: MIT
    url: 'http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT'
host: api.topcoder.com
basePath: /v5
schemes:
  - http
  - https
securityDefinitions:
  bearer:
    type: apiKey
    name: Authorization
    in: header
produces:
  - application/json
consumes:
  - application/json
paths:
  /members/stats/distribution:
    get:
      tags:
        - Statistics
      description: Get member distribution statistics
      parameters:
        - name: track
          in: query
          required: false
          type: string
          description: filter by track
        - name: subTrack
          in: query
          required: false
          type: string
          description: filter by sub track
        - name: fields
          in: query
          required: false
          type: string
          description: >
            fields=fieldName1,fieldName2,...,fieldN  - parameter for choosing
            which fields of MemberDistributionStats that will be included in
            response.


            + track - Select the field track

            + subTrack - Select the field subTrack

            + distribution - Select the field distribution

            + updatedAt - Select the field updatedAt

            + createdAt - Select the field createdAt

            + createdBy - Select the field createdBy

            + updatedBy - Select the field updatedBy
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MemberDistributionStats'
        '400':
          description: Bad request data
          schema:
            $ref: '#/definitions/ErrorModel'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorModel'
  '/members/{handle}/externalAccounts':
    get:
      tags:
        - Miscellaneous
      description: get member external accounts
      parameters:
        - in: path
          name: handle
          required: true
          type: string
        - name: fields
          in: query
          required: false
          type: string
          description: >
            fields=fieldName1,fieldName2,...,fieldN  - parameter for choosing
            which fields of MemberExternalAccounts that will be included in
            response.


            + userId - Select the field userId

            + handle - Select the field handle

            + behance - Select the field behance

            + bitbucket - Select the field bitbucket

            + dribbble - Select the field dribbble

            + github - Select the field github

            + linkedin - Select the field linkedin

            + stackoverflow - Select the field stackoverflow

            + twitter - Select the field twitter

            + updatedAt - Select the field updatedAt

            + createdAt - Select the field createdAt

            + createdBy - Select the field createdBy

            + updatedBy - Select the field updatedBy
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MemberExternalAccounts'
        '400':
          description: Bad request data
          schema:
            $ref: '#/definitions/ErrorModel'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorModel'
  '/members/{handle}/externalLinks':
    get:
      tags:
        - Miscellaneous
      description: get member external links
      parameters:
        - in: path
          name: handle
          required: true
          type: string
        - name: fields
          in: query
          required: false
          type: string
          description: >
            fields=fieldName1,fieldName2,...,fieldN  - parameter for choosing
            which fields of MemberExternalLinkData that will be included in
            response.


            + userId - Select the field userId

            + key - Select the field key

            + handle - Select the field handle

            + description - Select the field description

            + entities - Select the field entities

            + keywords - Select the field keywords

            + title - Select the field title

            + images - Select the field images

            + source - Select the field source

            + synchronizedAt - Select the field synchronizedAt

            + url - Select the field url
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/MemberExternalLinkData'
        '400':
          description: Bad request data
          schema:
            $ref: '#/definitions/ErrorModel'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorModel'
    post:
      tags:
        - Miscellaneous
      description: create member external link
      security:
        - bearer: []
      parameters:
        - in: path
          name: handle
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ExternalLinkURL'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ExternalLinkURL'
        '400':
          description: Bad request data
          schema:
            $ref: '#/definitions/ErrorModel'
        '401':
          description: Miss or wrong authentication credentials
          schema:
            $ref: '#/definitions/ErrorModel'
        '403':
          description: No permission
          schema:
            $ref: '#/definitions/ErrorModel'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorModel'
  '/members/{handle}/externalLinks/{key}':
    delete:
      tags:
        - Miscellaneous
      description: delete member external link
      security:
        - bearer: []
      parameters:
        - in: path
          name: handle
          required: true
          type: string
        - in: path
          name: key
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MemberExternalLink'
        '400':
          description: Bad request data
          schema:
            $ref: '#/definitions/ErrorModel'
        '401':
          description: Miss or wrong authentication credentials
          schema:
            $ref: '#/definitions/ErrorModel'
        '403':
          description: No permission
          schema:
            $ref: '#/definitions/ErrorModel'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorModel'
  '/members/{handle}/financial':
    get:
      tags:
        - Miscellaneous
      description: Get member financial information
      security:
        - bearer: []
      parameters:
        - in: path
          name: handle
          required: true
          type: string
        - name: fields
          in: query
          required: false
          type: string
          description: >
            fields=fieldName1,fieldName2,...,fieldN  - parameter for choosing
            which fields of MemberFinancial that will be included in response.


            + userId - Select the field userId

            + amount - Select the field amount

            + status - Select the field status

            + updatedAt - Select the field updatedAt

            + createdAt - Select the field createdAt

            + createdBy - Select the field createdBy

            + updatedBy - Select the field updatedBy
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MemberFinancial'
        '400':
          description: Bad request data
          schema:
            $ref: '#/definitions/ErrorModel'
        '401':
          description: Miss or wrong authentication credentials
          schema:
            $ref: '#/definitions/ErrorModel'
        '403':
          description: No permission
          schema:
            $ref: '#/definitions/ErrorModel'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorModel'
  '/members/{handle}/stats/history':
    get:
      tags:
        - Statistics
      description: Get member history statistics
      parameters:
        - in: path
          name: handle
          required: true
          type: string
        - name: groupIds
          in: query
          required: false
          type: string
          description: comma separated group ids
        - name: fields
          in: query
          required: false
          type: string
          description: >
            fields=fieldName1,fieldName2,...,fieldN  - parameter for choosing
            which fields of MemberHistoryStats that will be included in
            response.


            + userId - Select the field userId

            + handle - Select the field handle

            + handleLower - Select the field handleLower

            + DEVELOP - Select the field DEVELOP

            + DATA_SCIENCE - Select the field DATA_SCIENCE

            + updatedAt - Select the field updatedAt

            + createdAt - Select the field createdAt

            + createdBy - Select the field createdBy

            + updatedBy - Select the field updatedBy
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MemberHistoryStats'
        '400':
          description: Bad request data
          schema:
            $ref: '#/definitions/ErrorModel'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorModel'
  '/members/{handle}':
    get:
      tags:
        - Basic
      description: Get member profile. The authentication credential is optional. This operation will read data from ElasticSearch and not from DynamoDB.
      parameters:
        - in: path
          name: handle
          required: true
          type: string
        - name: fields
          in: query
          required: false
          type: string
          description: >
            fields=fieldName1,fieldName2,...,fieldN  - parameter for choosing
            which fields of MemberProfile that will be included in response. By default, all will be returned.


            + maxRating - Select the field maxRating

            + userId - Select the field userId

            + firstName - Select the field firstName

            + lastName - Select the field lastName

            + description - Select the field description

            + otherLangName - Select the field otherLangName

            + handle - Select the field handle

            + handleLower - Select the field handleLower

            + status - Select the field status

            + email - Select the field email

            + addresses - Select the field addresses

            + homeCountryCode - Select the field homeCountryCode

            + competitionCountryCode - Select the field competitionCountryCode

            + photoURL - Select the field photoURL

            + tracks - Select the field tracks

            + updatedAt - Select the field updatedAt

            + createdAt - Select the field createdAt

            + createdBy - Select the field createdBy

            + updatedBy - Select the field updatedBy
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MemberProfile'
        '400':
          description: Bad request data
          schema:
            $ref: '#/definitions/ErrorModel'
        '401':
          description: Miss or wrong authentication credentials
          schema:
            $ref: '#/definitions/ErrorModel'
        '403':
          description: No permission
          schema:
            $ref: '#/definitions/ErrorModel'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorModel'
    put:
      tags:
        - Basic
      description: >-
        Update member profile. If the email changes, a processor will pick up the kafka event and will send a verification email.
      security:
        - bearer: []
      parameters:
        - in: path
          name: handle
          required: true
          type: string
        - in: query
          name: verifyUrl
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/MemberProfile'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MemberProfile'
        '400':
          description: Bad request data
          schema:
            $ref: '#/definitions/ErrorModel'
        '401':
          description: Miss or wrong authentication credentials
          schema:
            $ref: '#/definitions/ErrorModel'
        '403':
          description: No permission
          schema:
            $ref: '#/definitions/ErrorModel'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorModel'
  '/members/{handle}/verify':
    get:
      tags:
        - Basic
      description: verify the user email
      security:
        - bearer: []
      parameters:
        - in: path
          name: handle
          required: true
          type: string
        - in: query
          name: token
          type: string
          required: true
          description: the verification token
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EmailVerificationResult'
        '400':
          description: Bad request data
          schema:
            $ref: '#/definitions/ErrorModel'
        '401':
          description: Miss or wrong authentication credentials
          schema:
            $ref: '#/definitions/ErrorModel'
        '403':
          description: No permission
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorModel'
  '/members/{handle}/photo':
    post:
      tags:
        - Basic
      description: Upload photo. The service will save the file from the request into AWS S3 and will update the member profile to change the URL
      security:
        - bearer: []
      consumes:
        - multipart/form-data
      parameters:
        - in: path
          name: handle
          required: true
          type: string
        - in: formData
          name: photo
          type: file
          required: true
          description: The image file to upload
      responses:
        '200':
          description: OK, it returns the uploaded photo URL
          schema:
            $ref: '#/definitions/UploadPhotoResult'
        '400':
          description: Bad request data
          schema:
            $ref: '#/definitions/ErrorModel'
        '401':
          description: Miss or wrong authentication credentials
          schema:
            $ref: '#/definitions/ErrorModel'
        '403':
          description: No permission
          schema:
            $ref: '#/definitions/ErrorModel'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorModel'
  '/members/{handle}/skills':
    get:
      tags:
        - Statistics
      description: get member aggregated skills
      parameters:
        - in: path
          name: handle
          required: true
          type: string
        - name: fields
          in: query
          required: false
          type: string
          description: >
            fields=fieldName1,fieldName2,...,fieldN  - parameter for choosing
            which fields of MemberAggregatedSkills that will be included in
            response.


            + userId - Select the field userId

            + handle - Select the field user handle

            + handleLower - Select the field handleLower

            + skills - Select the field skills

            + updatedAt - Select the field updatedAt

            + createdAt - Select the field createdAt

            + createdBy - Select the field createdBy

            + updatedBy - Select the field updatedBy
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MemberAggregatedSkills'
        '400':
          description: Bad request data
          schema:
            $ref: '#/definitions/ErrorModel'
        '401':
          description: Miss or wrong authentication credentials
          schema:
            $ref: '#/definitions/ErrorModel'
        '403':
          description: No permission
          schema:
            $ref: '#/definitions/ErrorModel'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorModel'
    patch:
      tags:
        - Statistics
      description: update member skills
      security:
        - bearer: []
      parameters:
        - in: path
          name: handle
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/MemberEnteredSkills'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MemberAggregatedSkills'
        '400':
          description: Bad request data
          schema:
            $ref: '#/definitions/ErrorModel'
        '401':
          description: Miss or wrong authentication credentials
          schema:
            $ref: '#/definitions/ErrorModel'
        '403':
          description: No permission
          schema:
            $ref: '#/definitions/ErrorModel'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorModel'
  '/members/{handle}/stats':
    get:
      tags:
        - Statistics
      description: get member stats
      parameters:
        - in: path
          name: handle
          required: true
          type: string
        - name: groupIds
          in: query
          required: false
          type: string
          description: comma separated group ids
        - name: fields
          in: query
          required: false
          type: string
          description: >
            fields=fieldName1,fieldName2,...,fieldN  - parameter for choosing
            which fields of MemberStats that will be included in response.


            + userId - Select the field userId

            + handle - Select the field handle

            + handleLower - Select the field handleLower

            + maxRating - Select the field maxRating

            + challenges - Select the field challenges

            + wins - Select the field wins

            + develop - Select the field develop

            + design - Select the field design

            + dataScience - Select the field dataScience

            + copilot - Select the field copilot

            + updatedAt - Select the field updatedAt

            + createdAt - Select the field createdAt

            + createdBy - Select the field createdBy

            + updatedBy - Select the field updatedBy
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MemberStats'
        '400':
          description: Bad request data
          schema:
            $ref: '#/definitions/ErrorModel'
        '403':
          description: No permission to access the API
          schema:
            $ref: '#/definitions/ErrorModel'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorModel'
  /members:
    get:
      tags:
        - Search
      description: >
        Search members, the authentication credential is optional.
        If API is called by Admin or M2M, then firstName and lastName can be included for searched members;
        otherwise the firstName and lastName will be excluded.
      parameters:
        - name: query
          in: query
          required: false
          type: string
          description: filter by query
        - name: handle
          in: query
          required: false
          type: string
          description: filter by handle
        - name: fields
          in: query
          required: false
          type: string
          description: >
            fields=fieldName1,fieldName2,...,fieldN  - parameter for choosing
            which fields of members that will be included in response.

            + userId - Select the field userId

            + firstName - Select the field firstName

            + lastName - Select the field lastName

            + maxRating - Select the field maxRating

            + description - Select the field description

            + status - Select the field status

            + competitionCountryCode - Select the field competitionCountryCode

            + photoURL - Select the field photoURL

            + tracks - Select the field tracks

            + createdAt - Select the field createdAt

            + skills - Select the field skills

            + stats - Select the field stats
        - name: status
          in: query
          required: false
          type: string
          description: filter by status
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/perPage'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/MemberSearchDataItem'
          headers:
            X-Next-Page:
              type: integer
              description: The index of the next page
            X-Page:
              type: integer
              description: The index of the current page (starting at 1)
            X-Per-Page:
              type: integer
              description: The number of items to list per page
            X-Prev-Page:
              type: integer
              description: The index of the previous page
            X-Total:
              type: integer
              description: The total number of items
            X-Total-Pages:
              type: integer
              description: The total number of pages
            Link:
              type: string
              description: Pagination link header.
        '400':
          description: Bad request data
          schema:
            $ref: '#/definitions/ErrorModel'
        '403':
          description: No permission to access the API
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorModel'
  /leaderboards:
    get:
      tags:
        - Statistics
      description: >-
        Get leaderboards of Top 10 Members that matching the specified criteria.
        The authentication credential is optional.
      parameters:
        - name: type
          in: query
          required: true
          type: string
          description: filter by type
        - name: name
          in: query
          required: false
          type: string
          description: 'filter by name, one of id and name should be provided'
        - name: id
          in: query
          required: false
          type: string
          description: 'filter by id, one of id and name should be provided'
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/perPage'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/MemberSearchDataItem'
          headers:
            X-Next-Page:
              type: integer
              description: The index of the next page
            X-Page:
              type: integer
              description: The index of the current page (starting at 1)
            X-Per-Page:
              type: integer
              description: The number of items to list per page
            X-Prev-Page:
              type: integer
              description: The index of the previous page
            X-Total:
              type: integer
              description: The total number of items
            X-Total-Pages:
              type: integer
              description: The total number of pages
            Link:
              type: string
              description: Pagination link header.
        '400':
          description: Bad request data
          schema:
            $ref: '#/definitions/ErrorModel'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorModel'
  '/members/{handle}/traits':
    get:
      tags:
        - Traits
      description: get member profile traits
      security:
        - bearer: []
      parameters:
        - in: path
          name: handle
          required: true
          type: string
        - name: traitIds
          in: query
          required: false
          type: string
          description: |
            traitIds value separated with comma
            + basic_id
            + work
            + skill
            + education
            + communities
        - name: fields
          in: query
          required: false
          type: string
          description: >
            fields=fieldName1,fieldName2,...,fieldN  - parameter for choosing
            which fields of MemberProfileTrait that will be included in
            response.


            + traitId - Select the field traitId

            + categoryName - Select the field categoryName

            + updatedAt - Select the field updatedAt

            + createdAt - Select the field createdAt

            + createdBy - Select the field createdBy

            + updatedBy - Select the field updatedBy

            + traits - Select the field traits
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/MemberProfileTrait'
        '400':
          description: Bad request data
          schema:
            $ref: '#/definitions/ErrorModel'
        '403':
          description: No permission
          schema:
            $ref: '#/definitions/ErrorModel'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorModel'
    delete:
      tags:
        - Traits
      description: delete member profile traits
      security:
        - bearer: []
      parameters:
        - in: path
          name: handle
          required: true
          type: string
        - name: traitIds
          in: query
          required: false
          type: string
          description: |
            traitIds value separated with comma
            + basic_id
            + work
            + skill
            + education
            + communities
      responses:
        '200':
          description: 'OK, response is empty'
        '400':
          description: Bad request data
          schema:
            $ref: '#/definitions/ErrorModel'
        '403':
          description: No permission
          schema:
            $ref: '#/definitions/ErrorModel'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorModel'
    post:
      tags:
        - Traits
      description: create member profile traits
      security:
        - bearer: []
      parameters:
        - in: path
          name: handle
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/MemberProfileTrait'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/MemberProfileTrait'
        '400':
          description: Bad request data
          schema:
            $ref: '#/definitions/ErrorModel'
        '403':
          description: No permission
          schema:
            $ref: '#/definitions/ErrorModel'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorModel'
    put:
      tags:
        - Traits
      description: update member profile traits
      security:
        - bearer: []
      parameters:
        - in: path
          name: handle
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/MemberProfileTrait'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/MemberProfileTrait'
        '400':
          description: Bad request data
          schema:
            $ref: '#/definitions/ErrorModel'
        '403':
          description: No permission
          schema:
            $ref: '#/definitions/ErrorModel'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorModel'
  /members/lookup/genders:
    get:
      tags:
        - Lookups (obsolete - move to Lookups API)
      description: Get Genders lookup values.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Genders'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorModel'
  /members/lookup/tShirtSizes:
    get:
      tags:
        - Lookups (obsolete - move to Lookups API)
      description: Get TShirt Sizes lookup values.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TShirtSizes'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorModel'
  /members/lookup/countries:
    get:
      tags:
        - Lookups (obsolete - move to Lookups API)
      description: Get Countries lookup values.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Countries'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorModel'
  /members/lookup/educationTypes:
    get:
      tags:
        - Lookups (obsolete - move to Lookups API)
      description: Get Education Types lookup values.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EducationTypes'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorModel'
  /members/lookup/languageLevels:
    get:
      tags:
        - Lookups (obsolete - move to Lookups API)
      description: Get Language Levels lookup values.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LanguageLevels'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorModel'
  /members/lookup/deviceTypes:
    get:
      tags:
        - Lookups (obsolete - move to Lookups API)
      description: Get Device Types lookup values.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DeviceTypes'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorModel'
  /members/lookup/softwareTypes:
    get:
      tags:
        - Lookups (obsolete - move to Lookups API)
      description: Get Software Types lookup values.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SoftwareTypes'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorModel'
  /members/lookup/serviceProviderTypes:
    get:
      tags:
        - Lookups (obsolete - move to Lookups API)
      description: Get Service Provider Types lookup values.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ServiceProviderTypes'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorModel'
definitions:
  MemberProfileTrait:
    properties:
      traitId:
        type: string
      categoryName:
        type: string
      createdAt:
        type: string
        format: date-time
      createdBy:
        type: number
        format: int64
      updatedAt:
        type: string
        format: date-time
      updatedBy:
        type: number
        format: int64
      traits:
        $ref: '#/definitions/MemberProfileTraitData'
  MemberProfileTraitData:
    description: >-
      the type should be one of the MemberProfileBasicInfo, MemberProfileWork,
      MemberProfileSkill, MemberProfileCommunities and MemberProfileEducation
    properties:
      data:
        type: array
        items:
          type: object
  MemberProfileBasicInfo:
    properties:
      handle:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      shortBio:
        type: string
      gender:
        type: string
      tshirtSize:
        type: string
      country:
        type: string
      primaryInterestInTopcoder:
        type: string
  MemberProfileEducation:
    properties:
      type:
        type: string
      schoolCollegeName:
        type: string
      major:
        type: string
      timePeriodFrom:
        type: string
        format: date-time
      timePeriodTo:
        type: string
        format: date-time
      graduated:
        type: boolean
  MemberProfileCommunities:
    properties:
      cognitive:
        type: boolean
      blockchain:
        type: boolean
  MemberProfileSkill:
    properties:
      design:
        type: array
        items:
          type: string
      development:
        type: array
        items:
          type: string
      dataScience:
        type: array
        items:
          type: string
  MemberProfileWork:
    properties:
      company:
        type: string
      position:
        type: string
      industry:
        type: string
      cityTown:
        type: string
      timePeriodFrom:
        type: string
        format: date-time
      timePeriodTo:
        type: string
        format: date-time
  MemberSearchDataItem:
    properties:
      userId:
        type: number
      firstName:
        type: string
      lastName:
        type: string
      createdAt:
        type: number
      photoURL:
        type: string
      description:
        type: string
      handle:
        type: string
      maxRating:
        properties:
          rating:
            type: number
          subTrack:
            type: string
          track:
            type: string
        type: object
      competitionCountryCode:
        type: string
      tracks:
        type: array
        items:
          type: string
      skills:
        type: array
        items:
          type: object
          properties:
            score:
              type: number
            name:
              type: string
      stats:
        $ref: '#/definitions/MemberStats'
  MemberStats:
    type: object
    properties:
      userId:
        type: integer
      handle:
        type: string
      handleLower:
        type: string
      maxRating:
        type: object
        properties:
          rating:
            type: number
            format: int64
          track:
            type: string
          subTrack:
            type: string
      challenges:
        type: number
        format: int64
      wins:
        type: number
        format: int64
      develop:
        type: object
        properties:
          challenges:
            type: number
            format: int64
          wins:
            type: number
            format: int64
          subTracks:
            type: array
            items:
              type: object
              properties:
                id:
                  type: number
                  format: int64
                name:
                  type: string
                challenges:
                  type: number
                  format: int64
                wins:
                  type: number
                  format: int64
                rank:
                  type: object
                  properties:
                    rating:
                      type: number
                      format: int64
                    activePercentile:
                      type: number
                      format: double
                    activeRank:
                      type: number
                      format: int64
                    activeCountryRank:
                      type: number
                      format: int64
                    activeSchoolRank:
                      type: number
                      format: int64
                    overallPercentile:
                      type: number
                      format: double
                    overallRank:
                      type: number
                      format: int64
                    overallCountryRank:
                      type: number
                      format: int64
                    overallSchoolRank:
                      type: number
                      format: int64
                    volatility:
                      type: number
                      format: int64
                    reliability:
                      type: number
                      format: double
                    maxRating:
                      type: number
                      format: int64
                    minRating:
                      type: number
                      format: int64
                submissions:
                  type: object
                  properties:
                    numInquiries:
                      type: number
                      format: int64
                    submissions:
                      type: number
                      format: int64
                    submissionRate:
                      type: number
                      format: double
                    passedScreening:
                      type: number
                      format: int64
                    screeningSuccessRate:
                      type: number
                      format: double
                    passedReview:
                      type: number
                      format: int64
                    reviewSuccessRate:
                      type: number
                      format: double
                    appeals:
                      type: number
                      format: int64
                    appealSuccessRate:
                      type: number
                      format: double
                    maxScore:
                      type: number
                      format: double
                    minScore:
                      type: number
                      format: double
                    avgScore:
                      type: number
                      format: double
                    avgPlacement:
                      type: number
                      format: double
                    winPercent:
                      type: number
                      format: double
                mostRecentEventDate:
                  type: string
                  format: date-time
                  description: 'ISO-8601 formatted date times (YYYY-MM-DDTHH:mm:ss.sssZ)'
                mostRecentSubmission:
                  type: string
                  format: date-time
                  description: 'ISO-8601 formatted date times (YYYY-MM-DDTHH:mm:ss.sssZ)'
          mostRecentEventDate:
            type: string
            format: date-time
            description: 'ISO-8601 formatted date times (YYYY-MM-DDTHH:mm:ss.sssZ)'
          mostRecentSubmission:
            type: string
            format: date-time
            description: 'ISO-8601 formatted date times (YYYY-MM-DDTHH:mm:ss.sssZ)'
      design:
        type: object
        properties:
          challenges:
            type: number
            format: int64
          wins:
            type: number
            format: int64
          subTracks:
            type: array
            items:
              type: object
              properties:
                id:
                  type: number
                  format: int64
                name:
                  type: string
                numInquiries:
                  type: number
                  format: int64
                challenges:
                  type: number
                  format: int64
                wins:
                  type: number
                  format: int64
                winPercent:
                  type: number
                  format: double
                avgPlacement:
                  type: number
                  format: double
                submissions:
                  type: number
                  format: int64
                submissionRate:
                  type: number
                  format: double
                passedScreening:
                  type: number
                  format: int64
                screeningSuccessRate:
                  type: number
                  format: double
                mostRecentEventDate:
                  type: string
                  format: date-time
                  description: 'ISO-8601 formatted date times (YYYY-MM-DDTHH:mm:ss.sssZ)'
                mostRecentSubmission:
                  type: string
                  format: date-time
                  description: 'ISO-8601 formatted date times (YYYY-MM-DDTHH:mm:ss.sssZ)'
          mostRecentEventDate:
            type: string
            format: date-time
            description: 'ISO-8601 formatted date times (YYYY-MM-DDTHH:mm:ss.sssZ)'
          mostRecentSubmission:
            type: string
            format: date-time
            description: 'ISO-8601 formatted date times (YYYY-MM-DDTHH:mm:ss.sssZ)'
      dataScience:
        type: object
        properties:
          challenges:
            type: number
            format: int64
          wins:
            type: number
            format: int64
          srm:
            type: object
            properties:
              challenges:
                type: number
                format: int64
              wins:
                type: number
                format: int64
              rank:
                type: object
                properties:
                  rating:
                    type: number
                    format: int64
                  percentile:
                    type: number
                    format: double
                  rank:
                    type: number
                    format: int64
                  countryRank:
                    type: number
                    format: int64
                  schoolRank:
                    type: number
                    format: int64
                  volatility:
                    type: number
                    format: double
                  maximumRating:
                    type: number
                    format: int64
                  minimumRating:
                    type: number
                    format: int64
                  defaultLanguage:
                    type: string
                  competitions:
                    type: number
                    format: int64
                  mostRecentEventName:
                    type: string
                  mostRecentEventDate:
                    type: string
                    format: date-time
                    description: 'ISO-8601 formatted date times (YYYY-MM-DDTHH:mm:ss.sssZ)'
              challengeDetails:
                type: array
                items:
                  type: object
                  properties:
                    levelName:
                      type: string
                    challenges:
                      type: number
                      format: int64
                    failedChallenges:
                      type: number
                      format: int64
              division1:
                type: array
                items:
                  type: object
                  properties:
                    levelName:
                      type: string
                    problemsSubmitted:
                      type: number
                      format: int64
                    problemsFailed:
                      type: number
                      format: int64
                    problemsSysByTest:
                      type: number
                      format: int64
              division2:
                type: array
                items:
                  type: object
                  properties:
                    levelName:
                      type: string
                    problemsSubmitted:
                      type: number
                      format: int64
                    problemsFailed:
                      type: number
                      format: int64
                    problemsSysByTest:
                      type: number
                      format: int64
              mostRecentEventName:
                type: string
              mostRecentEventDate:
                type: string
                format: date-time
                description: 'ISO-8601 formatted date times (YYYY-MM-DDTHH:mm:ss.sssZ)'
              mostRecentSubmission:
                type: string
                format: date-time
                description: 'ISO-8601 formatted date times (YYYY-MM-DDTHH:mm:ss.sssZ)'
          marathonMatch:
            type: object
            properties:
              challenges:
                type: number
                format: int64
              wins:
                type: number
                format: int64
              rank:
                type: object
                properties:
                  rating:
                    type: number
                    format: int64
                  competitions:
                    type: number
                    format: int64
                  avgRank:
                    type: number
                    format: int64
                  avgNumSubmissions:
                    type: number
                    format: int64
                  bestRank:
                    type: number
                    format: int64
                  topFiveFinishes:
                    type: number
                    format: int64
                  topTenFinishes:
                    type: number
                    format: int64
                  rank:
                    type: number
                    format: int64
                  percentile:
                    type: number
                    format: double
                  volatility:
                    type: number
                    format: double
                  minimumRating:
                    type: number
                    format: int64
                  maximumRating:
                    type: number
                    format: int64
                  countryRank:
                    type: number
                    format: int64
                  schoolRank:
                    type: number
                    format: int64
                  defaultLanguage:
                    type: string
                  mostRecentEventName:
                    type: string
                  mostRecentEventDate:
                    type: string
                    format: date-time
                    description: 'ISO-8601 formatted date times (YYYY-MM-DDTHH:mm:ss.sssZ)'
              mostRecentEventName:
                type: string
              mostRecentEventDate:
                type: string
                format: date-time
                description: 'ISO-8601 formatted date times (YYYY-MM-DDTHH:mm:ss.sssZ)'
              mostRecentSubmission:
                type: string
                format: date-time
                description: 'ISO-8601 formatted date times (YYYY-MM-DDTHH:mm:ss.sssZ)'
          mostRecentEventName:
            type: string
          mostRecentEventDate:
            type: string
            format: date-time
            description: 'ISO-8601 formatted date times (YYYY-MM-DDTHH:mm:ss.sssZ)'
          mostRecentSubmission:
            type: string
            format: date-time
            description: 'ISO-8601 formatted date times (YYYY-MM-DDTHH:mm:ss.sssZ)'
      copilot:
        type: object
        properties:
          contests:
            type: number
            format: int64
          projects:
            type: number
            format: int64
          failures:
            type: number
            format: int64
          reposts:
            type: number
            format: int64
          activeContests:
            type: number
            format: int64
          activeProjects:
            type: number
            format: int64
          fulfillment:
            type: number
            format: double
      updatedAt:
        type: string
        format: date-time
        description: 'ISO-8601 formatted date times (YYYY-MM-DDTHH:mm:ss.sssZ)'
      createdAt:
        type: string
        format: date-time
        description: 'ISO-8601 formatted date times (YYYY-MM-DDTHH:mm:ss.sssZ)'
      createdBy:
        type: string
      updatedBy:
        type: string
  MemberEnteredSkills:
    type: object
    properties:
      key:
        type: object
        properties:
          tagName:
            type: string
          hidden:
            type: boolean
          score:
            type: number
          sources:
            type: array
            items:
              type: string
  MemberAggregatedSkills:
    type: object
    properties:
      userId:
        type: integer
      handle:
        type: string
      handleLower:
        type: string
      skills:
        type: object
        properties:
          key:
            type: object
            properties:
              tagName:
                type: string
              hidden:
                type: boolean
              score:
                type: number
              sources:
                type: array
                items:
                  type: string
      updatedAt:
        type: string
        format: date-time
        description: 'ISO-8601 formatted date times (YYYY-MM-DDTHH:mm:ss.sssZ)'
      createdAt:
        type: string
        format: date-time
        description: 'ISO-8601 formatted date times (YYYY-MM-DDTHH:mm:ss.sssZ)'
      createdBy:
        type: string
      updatedBy:
        type: string
  EmailVerificationResult:
    type: object
    properties:
      emailChangeCompleted:
        type: boolean
      verifiedEmail:
        type: string
        description: One of (old|new)
  UploadPhotoResult:
    type: object
    properties:
      photoURL:
        type: string
  MemberProfile:
    type: object
    properties:
      maxRating:
        type: object
        properties:
          rating:
            type: number
            format: int64
          track:
            type: string
          subTrack:
            type: string
      userId:
        type: integer
      firstName:
        type: string
      lastName:
        type: string
      description:
        type: string
      otherLangName:
        type: string
      handle:
        type: string
      handleLower:
        type: string
      status:
        type: string
      email:
        type: string
      addresses:
        type: array
        items:
          type: object
          properties:
            streetAddr1:
              type: string
            streetAddr2:
              type: string
            city:
              type: string
            zip:
              type: string
            stateCode:
              type: string
            type:
              type: string
            updatedAt:
              type: string
              format: date-time
              description: 'ISO-8601 formatted date times (YYYY-MM-DDTHH:mm:ss.sssZ)'
            createdAt:
              type: string
              format: date-time
              description: 'ISO-8601 formatted date times (YYYY-MM-DDTHH:mm:ss.sssZ)'
            createdBy:
              type: string
            updatedBy:
              type: string
      homeCountryCode:
        type: string
      competitionCountryCode:
        type: string
      photoURL:
        type: string
      tracks:
        type: array
        items:
          type: string
      updatedAt:
        type: string
        format: date-time
        description: 'ISO-8601 formatted date times (YYYY-MM-DDTHH:mm:ss.sssZ)'
      createdAt:
        type: string
        format: date-time
        description: 'ISO-8601 formatted date times (YYYY-MM-DDTHH:mm:ss.sssZ)'
      createdBy:
        type: string
      updatedBy:
        type: string
  MemberHistoryStats:
    type: object
    properties:
      userId:
        type: integer
      handle:
        type: string
      handleLower:
        type: string
      DEVELOP:
        type: object
        properties:
          subTracks:
            type: array
            items:
              type: object
              properties:
                id:
                  type: number
                  format: int64
                name:
                  type: string
                history:
                  type: array
                  items:
                    type: object
                    properties:
                      challengeId:
                        type: number
                        format: int64
                      challengeName:
                        type: string
                      ratingDate:
                        type: string
                        format: date-time
                        description: >-
                          ISO-8601 formatted date times
                          (YYYY-MM-DDTHH:mm:ss.sssZ)
                      newRating:
                        type: number
                        format: int64
      DATA_SCIENCE:
        type: object
        properties:
          SRM:
            type: object
            properties:
              history:
                type: array
                items:
                  type: object
                  properties:
                    challengeId:
                      type: number
                      format: int64
                    challengeName:
                      type: string
                    date:
                      type: string
                      format: date-time
                      description: 'ISO-8601 formatted date times (YYYY-MM-DDTHH:mm:ss.sssZ)'
                    rating:
                      type: number
                      format: double
                    placement:
                      type: number
                      format: int64
                    percentile:
                      type: number
                      format: double
          MARATHON_MATCH:
            type: object
            properties:
              history:
                type: array
                items:
                  type: object
                  properties:
                    challengeId:
                      type: number
                      format: int64
                    challengeName:
                      type: string
                    date:
                      type: string
                      format: date-time
                      description: 'ISO-8601 formatted date times (YYYY-MM-DDTHH:mm:ss.sssZ)'
                    rating:
                      type: number
                      format: double
                    placement:
                      type: number
                      format: int64
                    percentile:
                      type: number
                      format: double
      updatedAt:
        type: string
        format: date-time
        description: 'ISO-8601 formatted date times (YYYY-MM-DDTHH:mm:ss.sssZ)'
      createdAt:
        type: string
        format: date-time
        description: 'ISO-8601 formatted date times (YYYY-MM-DDTHH:mm:ss.sssZ)'
      createdBy:
        type: string
      updatedBy:
        type: string
  MemberFinancial:
    type: object
    properties:
      userId:
        type: number
        format: int64
      amount:
        type: number
        format: double
      status:
        type: string
      updatedAt:
        type: string
        format: date-time
        description: 'ISO-8601 formatted date times (YYYY-MM-DDTHH:mm:ss.sssZ)'
      createdAt:
        type: string
        format: date-time
        description: 'ISO-8601 formatted date times (YYYY-MM-DDTHH:mm:ss.sssZ)'
      createdBy:
        type: string
      updatedBy:
        type: string
  MemberExternalLink:
    type: object
    properties:
      userId:
        type: integer
      key:
        type: string
      URL:
        type: string
      synchronizedAt:
        type: number
        format: int64
      isDeleted:
        type: boolean
      hasErrored:
        type: boolean
      updatedAt:
        type: string
        format: date-time
        description: 'ISO-8601 formatted date times (YYYY-MM-DDTHH:mm:ss.sssZ)'
      createdAt:
        type: string
        format: date-time
        description: 'ISO-8601 formatted date times (YYYY-MM-DDTHH:mm:ss.sssZ)'
      createdBy:
        type: string
      updatedBy:
        type: string
  ExternalLinkURL:
    type: object
    properties:
      url:
        type: string
      updatedAt:
        type: string
        format: date-time
        description: 'ISO-8601 formatted date times (YYYY-MM-DDTHH:mm:ss.sssZ)'
      createdAt:
        type: string
        format: date-time
        description: 'ISO-8601 formatted date times (YYYY-MM-DDTHH:mm:ss.sssZ)'
      createdBy:
        type: string
      updatedBy:
        type: string
  MemberDistributionStats:
    type: object
    properties:
      track:
        type: string
      subTrack:
        type: string
      distribution:
        type: object
        properties:
          ratingRange0To099:
            type: number
            format: int64
          ratingRange100To199:
            type: number
            format: int64
          ratingRange200To299:
            type: number
            format: int64
          ratingRange300To399:
            type: number
            format: int64
          ratingRange400To499:
            type: number
            format: int64
          ratingRange500To599:
            type: number
            format: int64
          ratingRange600To699:
            type: number
            format: int64
          ratingRange700To799:
            type: number
            format: int64
          ratingRange800To899:
            type: number
            format: int64
          ratingRange900To999:
            type: number
            format: int64
          ratingRange1000To1099:
            type: number
            format: int64
          ratingRange1100To1199:
            type: number
            format: int64
          ratingRange1200To1299:
            type: number
            format: int64
          ratingRange1300To1399:
            type: number
            format: int64
          ratingRange1400To1499:
            type: number
            format: int64
          ratingRange1500To1599:
            type: number
            format: int64
          ratingRange1600To1699:
            type: number
            format: int64
          ratingRange1700To1799:
            type: number
            format: int64
          ratingRange1800To1899:
            type: number
            format: int64
          ratingRange1900To1999:
            type: number
            format: int64
          ratingRange2000To2099:
            type: number
            format: int64
          ratingRange2100To2199:
            type: number
            format: int64
          ratingRange2200To2299:
            type: number
            format: int64
          ratingRange2300To2399:
            type: number
            format: int64
          ratingRange2400To2499:
            type: number
            format: int64
          ratingRange2500To2599:
            type: number
            format: int64
          ratingRange2600To2699:
            type: number
            format: int64
          ratingRange2700To2799:
            type: number
            format: int64
          ratingRange2800To2899:
            type: number
            format: int64
          ratingRange2900To2999:
            type: number
            format: int64
          ratingRange3000To3099:
            type: number
            format: int64
          ratingRange3100To3199:
            type: number
            format: int64
          ratingRange3200To3299:
            type: number
            format: int64
          ratingRange3300To3399:
            type: number
            format: int64
          ratingRange3400To3499:
            type: number
            format: int64
          ratingRange3500To3599:
            type: number
            format: int64
          ratingRange3600To3699:
            type: number
            format: int64
          ratingRange3700To3799:
            type: number
            format: int64
          ratingRange3800To3899:
            type: number
            format: int64
          ratingRange3900To3999:
            type: number
            format: int64
      updatedAt:
        type: string
        format: date-time
        description: 'ISO-8601 formatted date times (YYYY-MM-DDTHH:mm:ss.sssZ)'
      createdAt:
        type: string
        format: date-time
        description: 'ISO-8601 formatted date times (YYYY-MM-DDTHH:mm:ss.sssZ)'
      createdBy:
        type: string
      updatedBy:
        type: string
  Genders:
    title: genders lookups
    type: array
    items:
      type: string
    example:
      - Male
      - Female
      - Prefer not to answer
  TShirtSizes:
    title: TShirt sizes lookups
    type: array
    items:
      type: string
    example:
      - XXS
      - XS
      - S
      - M
      - L
      - XL
      - XXL
      - XXXL
  Countries:
    title: Countries lookups
    type: array
    items:
      type: object
      properties:
        country:
          type: string
        countryCode:
          type: string
    example:
      - 'Afghanistan, AFG'
      - 'Albania, ALB'
      - 'Antarctica, ATA'
      - 'Algeria, DZA'
      - 'American Samoa, ASM'
      - 'Andorra, AND'
      - 'Angola, AGO'
      - 'Antigua and Barbuda, ATG'
  EducationTypes:
    title: EducationTypes lookups
    type: array
    items:
      type: string
    example:
      - Secondary School
      - University
  LanguageLevels:
    title: LanguageLevels lookups
    type: array
    items:
      type: string
    example:
      - Basic
      - Intermediate
      - Advanced
      - Native
  DeviceTypes:
    title: DeviceTypes lookups
    type: array
    items:
      type: string
    example:
      - Desktop
      - Laptop
      - Tablet
      - Smartphone
      - Console
      - Wearable
      - Other
  SoftwareTypes:
    title: SoftwareTypes lookups
    type: array
    items:
      type: string
    example:
      - Developer Tools
      - Browser
      - Productivity
      - Graphics & Design
      - Utilities
  ServiceProviderTypes:
    title: ServiceProviderType lookups
    type: array
    items:
      type: string
    example:
      - Internet Service Provider
      - Mobile Carrier
      - Television
      - Other
  MemberExternalAccounts:
    type: object
    properties:
      userId:
        type: integer
      handle:
        type: string
      behance:
        type: object
        properties:
          userId:
            type: integer
          name:
            type: string
          profileURL:
            type: string
          projectAppreciations:
            type: number
            format: int64
          projectViews:
            type: number
            format: int64
          summary:
            type: string
          creativeFields:
            type: string
      bitbucket:
        type: object
        properties:
          userId:
            type: integer
          handle:
            type: string
          followers:
            type: number
            format: int64
          languages:
            type: string
          profileURL:
            type: string
          repos:
            type: number
            format: int64
      dribbble:
        type: object
        properties:
          userId:
            type: integer
          handle:
            type: string
          socialId:
            type: string
          name:
            type: string
          summary:
            type: string
          followers:
            type: number
            format: int64
          likes:
            type: number
            format: int64
          profileURL:
            type: string
          tags:
            type: string
      github:
        type: object
        properties:
          userId:
            type: integer
          followers:
            type: number
            format: int64
          handle:
            type: string
          languages:
            type: string
          profileURL:
            type: string
          publicRepos:
            type: number
            format: int64
          socialId:
            type: string
      linkedin:
        type: object
        properties:
          userId:
            type: integer
          name:
            type: string
          handle:
            type: string
          socialId:
            type: string
          profileURL:
            type: string
          summary:
            type: string
          title:
            type: string
          skills:
            type: string
      stackoverflow:
        type: object
        properties:
          userId:
            type: integer
          name:
            type: string
          socialId:
            type: string
          answers:
            type: number
            format: int64
          profileURL:
            type: string
          questions:
            type: number
            format: int64
          reputation:
            type: number
            format: int64
          topTags:
            type: string
      twitter:
        type: object
        properties:
          userId:
            type: integer
          handle:
            type: string
          socialId:
            type: string
          bio:
            type: string
          noOfTweets:
            type: number
            format: int64
          profileURL:
            type: string
          profileImage:
            type: string
      updatedAt:
        type: string
        format: date-time
        description: 'ISO-8601 formatted date times (YYYY-MM-DDTHH:mm:ss.sssZ)'
      createdAt:
        type: string
        format: date-time
        description: 'ISO-8601 formatted date times (YYYY-MM-DDTHH:mm:ss.sssZ)'
      createdBy:
        type: string
      updatedBy:
        type: string
  MemberExternalLinkData:
    type: object
    properties:
      userId:
        type: integer
      key:
        type: string
      handle:
        type: string
      description:
        type: string
      entities:
        type: string
      keywords:
        type: string
      title:
        type: string
      images:
        type: string
      source:
        type: string
      synchronizedAt:
        type: number
        format: int64
      URL:
        type: string
  ErrorModel:
    type: object
    properties:
      message:
        type: string
        description: the error message
parameters:
  page:
    name: page
    in: query
    description: The page number.
    required: false
    type: integer
    default: 1
  perPage:
    name: perPage
    in: query
    description: The number of items to list per page.
    required: false
    type: integer
    default: 20
    maximum: 100
